<?php
/**
 * UsersApiTest
 * PHP version 5
 *
 * @category Class
 * @package  InfluxDB2Generated
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Influx API Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace InfluxDB2Generated;

use \InfluxDB2Generated\Configuration;
use \InfluxDB2Generated\ApiException;
use \InfluxDB2Generated\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * UsersApiTest Class Doc Comment
 *
 * @category Class
 * @package  InfluxDB2Generated
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class UsersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for bucketsBucketIDMembersGet
     *
     * List all users with member privileges for a bucket.
     *
     */
    public function testBucketsBucketIDMembersGet()
    {
    }

    /**
     * Test case for bucketsBucketIDMembersPost
     *
     * Add bucket member.
     *
     */
    public function testBucketsBucketIDMembersPost()
    {
    }

    /**
     * Test case for bucketsBucketIDMembersUserIDDelete
     *
     * removes a member from an bucket.
     *
     */
    public function testBucketsBucketIDMembersUserIDDelete()
    {
    }

    /**
     * Test case for bucketsBucketIDOwnersGet
     *
     * List all owners of a bucket.
     *
     */
    public function testBucketsBucketIDOwnersGet()
    {
    }

    /**
     * Test case for bucketsBucketIDOwnersPost
     *
     * Add bucket owner.
     *
     */
    public function testBucketsBucketIDOwnersPost()
    {
    }

    /**
     * Test case for bucketsBucketIDOwnersUserIDDelete
     *
     * removes an owner from a bucket.
     *
     */
    public function testBucketsBucketIDOwnersUserIDDelete()
    {
    }

    /**
     * Test case for dashboardsDashboardIDMembersGet
     *
     * List all dashboard members.
     *
     */
    public function testDashboardsDashboardIDMembersGet()
    {
    }

    /**
     * Test case for dashboardsDashboardIDMembersPost
     *
     * Add dashboard member.
     *
     */
    public function testDashboardsDashboardIDMembersPost()
    {
    }

    /**
     * Test case for dashboardsDashboardIDMembersUserIDDelete
     *
     * removes a member from an dashboard.
     *
     */
    public function testDashboardsDashboardIDMembersUserIDDelete()
    {
    }

    /**
     * Test case for dashboardsDashboardIDOwnersGet
     *
     * List all dashboard owners.
     *
     */
    public function testDashboardsDashboardIDOwnersGet()
    {
    }

    /**
     * Test case for dashboardsDashboardIDOwnersPost
     *
     * Add dashboard owner.
     *
     */
    public function testDashboardsDashboardIDOwnersPost()
    {
    }

    /**
     * Test case for dashboardsDashboardIDOwnersUserIDDelete
     *
     * removes an owner from a dashboard.
     *
     */
    public function testDashboardsDashboardIDOwnersUserIDDelete()
    {
    }

    /**
     * Test case for meGet
     *
     * Returns currently authenticated user.
     *
     */
    public function testMeGet()
    {
    }

    /**
     * Test case for mePasswordPut
     *
     * Update password.
     *
     */
    public function testMePasswordPut()
    {
    }

    /**
     * Test case for orgsOrgIDMembersGet
     *
     * List all members of an organization.
     *
     */
    public function testOrgsOrgIDMembersGet()
    {
    }

    /**
     * Test case for orgsOrgIDMembersPost
     *
     * Add organization member.
     *
     */
    public function testOrgsOrgIDMembersPost()
    {
    }

    /**
     * Test case for orgsOrgIDMembersUserIDDelete
     *
     * removes a member from an organization.
     *
     */
    public function testOrgsOrgIDMembersUserIDDelete()
    {
    }

    /**
     * Test case for orgsOrgIDOwnersGet
     *
     * List all owners of an organization.
     *
     */
    public function testOrgsOrgIDOwnersGet()
    {
    }

    /**
     * Test case for orgsOrgIDOwnersPost
     *
     * Add organization owner.
     *
     */
    public function testOrgsOrgIDOwnersPost()
    {
    }

    /**
     * Test case for orgsOrgIDOwnersUserIDDelete
     *
     * removes an owner from an organization.
     *
     */
    public function testOrgsOrgIDOwnersUserIDDelete()
    {
    }

    /**
     * Test case for scrapersScraperTargetIDMembersGet
     *
     * List all users with member privileges for a scraper target.
     *
     */
    public function testScrapersScraperTargetIDMembersGet()
    {
    }

    /**
     * Test case for scrapersScraperTargetIDMembersPost
     *
     * Add scraper target member.
     *
     */
    public function testScrapersScraperTargetIDMembersPost()
    {
    }

    /**
     * Test case for scrapersScraperTargetIDMembersUserIDDelete
     *
     * removes a member from a scraper target.
     *
     */
    public function testScrapersScraperTargetIDMembersUserIDDelete()
    {
    }

    /**
     * Test case for scrapersScraperTargetIDOwnersGet
     *
     * List all owners of a scraper target.
     *
     */
    public function testScrapersScraperTargetIDOwnersGet()
    {
    }

    /**
     * Test case for scrapersScraperTargetIDOwnersPost
     *
     * Add scraper target owner.
     *
     */
    public function testScrapersScraperTargetIDOwnersPost()
    {
    }

    /**
     * Test case for scrapersScraperTargetIDOwnersUserIDDelete
     *
     * removes an owner from a scraper target.
     *
     */
    public function testScrapersScraperTargetIDOwnersUserIDDelete()
    {
    }

    /**
     * Test case for tasksTaskIDMembersGet
     *
     * List all task members.
     *
     */
    public function testTasksTaskIDMembersGet()
    {
    }

    /**
     * Test case for tasksTaskIDMembersPost
     *
     * Add task member.
     *
     */
    public function testTasksTaskIDMembersPost()
    {
    }

    /**
     * Test case for tasksTaskIDMembersUserIDDelete
     *
     * removes a member from an task.
     *
     */
    public function testTasksTaskIDMembersUserIDDelete()
    {
    }

    /**
     * Test case for tasksTaskIDOwnersGet
     *
     * List all task owners.
     *
     */
    public function testTasksTaskIDOwnersGet()
    {
    }

    /**
     * Test case for tasksTaskIDOwnersPost
     *
     * Add task owner.
     *
     */
    public function testTasksTaskIDOwnersPost()
    {
    }

    /**
     * Test case for tasksTaskIDOwnersUserIDDelete
     *
     * removes an owner from an task.
     *
     */
    public function testTasksTaskIDOwnersUserIDDelete()
    {
    }

    /**
     * Test case for telegrafsTelegrafIDMembersGet
     *
     * List all users with member privileges for a telegraf config.
     *
     */
    public function testTelegrafsTelegrafIDMembersGet()
    {
    }

    /**
     * Test case for telegrafsTelegrafIDMembersPost
     *
     * Add telegraf config member.
     *
     */
    public function testTelegrafsTelegrafIDMembersPost()
    {
    }

    /**
     * Test case for telegrafsTelegrafIDMembersUserIDDelete
     *
     * removes a member from a telegraf config.
     *
     */
    public function testTelegrafsTelegrafIDMembersUserIDDelete()
    {
    }

    /**
     * Test case for telegrafsTelegrafIDOwnersGet
     *
     * List all owners of a telegraf config.
     *
     */
    public function testTelegrafsTelegrafIDOwnersGet()
    {
    }

    /**
     * Test case for telegrafsTelegrafIDOwnersPost
     *
     * Add telegraf config owner.
     *
     */
    public function testTelegrafsTelegrafIDOwnersPost()
    {
    }

    /**
     * Test case for telegrafsTelegrafIDOwnersUserIDDelete
     *
     * removes an owner from a telegraf config.
     *
     */
    public function testTelegrafsTelegrafIDOwnersUserIDDelete()
    {
    }

    /**
     * Test case for usersGet
     *
     * List all users.
     *
     */
    public function testUsersGet()
    {
    }

    /**
     * Test case for usersPost
     *
     * Create a user.
     *
     */
    public function testUsersPost()
    {
    }

    /**
     * Test case for usersUserIDDelete
     *
     * deletes a user.
     *
     */
    public function testUsersUserIDDelete()
    {
    }

    /**
     * Test case for usersUserIDGet
     *
     * Retrieve a user.
     *
     */
    public function testUsersUserIDGet()
    {
    }

    /**
     * Test case for usersUserIDLogsGet
     *
     * Retrieve operation logs for a user.
     *
     */
    public function testUsersUserIDLogsGet()
    {
    }

    /**
     * Test case for usersUserIDPasswordPut
     *
     * Update password.
     *
     */
    public function testUsersUserIDPasswordPut()
    {
    }

    /**
     * Test case for usersUserIDPatch
     *
     * Update a user.
     *
     */
    public function testUsersUserIDPatch()
    {
    }
}
