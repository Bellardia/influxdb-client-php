<?php
/**
 * BucketsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  InfluxDB2Generated
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Influx API Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace InfluxDB2Generated;

use \InfluxDB2Generated\Configuration;
use \InfluxDB2Generated\ApiException;
use \InfluxDB2Generated\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * BucketsApiTest Class Doc Comment
 *
 * @category Class
 * @package  InfluxDB2Generated
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class BucketsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for bucketsBucketIDDelete
     *
     * Delete a bucket.
     *
     */
    public function testBucketsBucketIDDelete()
    {
    }

    /**
     * Test case for bucketsBucketIDGet
     *
     * Retrieve a bucket.
     *
     */
    public function testBucketsBucketIDGet()
    {
    }

    /**
     * Test case for bucketsBucketIDLabelsGet
     *
     * list all labels for a bucket.
     *
     */
    public function testBucketsBucketIDLabelsGet()
    {
    }

    /**
     * Test case for bucketsBucketIDLabelsLabelIDDelete
     *
     * delete a label from a bucket.
     *
     */
    public function testBucketsBucketIDLabelsLabelIDDelete()
    {
    }

    /**
     * Test case for bucketsBucketIDLabelsPost
     *
     * add a label to a bucket.
     *
     */
    public function testBucketsBucketIDLabelsPost()
    {
    }

    /**
     * Test case for bucketsBucketIDLogsGet
     *
     * Retrieve operation logs for a bucket.
     *
     */
    public function testBucketsBucketIDLogsGet()
    {
    }

    /**
     * Test case for bucketsBucketIDMembersGet
     *
     * List all users with member privileges for a bucket.
     *
     */
    public function testBucketsBucketIDMembersGet()
    {
    }

    /**
     * Test case for bucketsBucketIDMembersPost
     *
     * Add bucket member.
     *
     */
    public function testBucketsBucketIDMembersPost()
    {
    }

    /**
     * Test case for bucketsBucketIDMembersUserIDDelete
     *
     * removes a member from an bucket.
     *
     */
    public function testBucketsBucketIDMembersUserIDDelete()
    {
    }

    /**
     * Test case for bucketsBucketIDOwnersGet
     *
     * List all owners of a bucket.
     *
     */
    public function testBucketsBucketIDOwnersGet()
    {
    }

    /**
     * Test case for bucketsBucketIDOwnersPost
     *
     * Add bucket owner.
     *
     */
    public function testBucketsBucketIDOwnersPost()
    {
    }

    /**
     * Test case for bucketsBucketIDOwnersUserIDDelete
     *
     * removes an owner from a bucket.
     *
     */
    public function testBucketsBucketIDOwnersUserIDDelete()
    {
    }

    /**
     * Test case for bucketsBucketIDPatch
     *
     * Update a bucket.
     *
     */
    public function testBucketsBucketIDPatch()
    {
    }

    /**
     * Test case for bucketsGet
     *
     * List all buckets.
     *
     */
    public function testBucketsGet()
    {
    }

    /**
     * Test case for bucketsPost
     *
     * Create a bucket.
     *
     */
    public function testBucketsPost()
    {
    }

    /**
     * Test case for sourcesSourceIDBucketsGet
     *
     * Get a sources buckets (will return dbrps in the form of buckets if it is a v1 source).
     *
     */
    public function testSourcesSourceIDBucketsGet()
    {
    }
}
