<?php
/**
 * DashboardsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  InfluxDB2Generated
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Influx API Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace InfluxDB2Generated;

use \InfluxDB2Generated\Configuration;
use \InfluxDB2Generated\ApiException;
use \InfluxDB2Generated\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DashboardsApiTest Class Doc Comment
 *
 * @category Class
 * @package  InfluxDB2Generated
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DashboardsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for dashboardsDashboardIDCellsCellIDDelete
     *
     * Delete a dashboard cell.
     *
     */
    public function testDashboardsDashboardIDCellsCellIDDelete()
    {
    }

    /**
     * Test case for dashboardsDashboardIDCellsCellIDPatch
     *
     * Update the non positional information related to a cell (because updates to a single cells positional data could cause grid conflicts).
     *
     */
    public function testDashboardsDashboardIDCellsCellIDPatch()
    {
    }

    /**
     * Test case for dashboardsDashboardIDCellsCellIDViewGet
     *
     * Retrieve the view for a cell in a dashboard.
     *
     */
    public function testDashboardsDashboardIDCellsCellIDViewGet()
    {
    }

    /**
     * Test case for dashboardsDashboardIDCellsCellIDViewPatch
     *
     * Update the view for a cell.
     *
     */
    public function testDashboardsDashboardIDCellsCellIDViewPatch()
    {
    }

    /**
     * Test case for dashboardsDashboardIDCellsPost
     *
     * Create a dashboard cell.
     *
     */
    public function testDashboardsDashboardIDCellsPost()
    {
    }

    /**
     * Test case for dashboardsDashboardIDCellsPut
     *
     * Replace a dashboards cells.
     *
     */
    public function testDashboardsDashboardIDCellsPut()
    {
    }

    /**
     * Test case for dashboardsDashboardIDDelete
     *
     * Delete a dashboard.
     *
     */
    public function testDashboardsDashboardIDDelete()
    {
    }

    /**
     * Test case for dashboardsDashboardIDGet
     *
     * Get a single Dashboard.
     *
     */
    public function testDashboardsDashboardIDGet()
    {
    }

    /**
     * Test case for dashboardsDashboardIDLabelsGet
     *
     * list all labels for a dashboard.
     *
     */
    public function testDashboardsDashboardIDLabelsGet()
    {
    }

    /**
     * Test case for dashboardsDashboardIDLabelsLabelIDDelete
     *
     * delete a label from a dashboard.
     *
     */
    public function testDashboardsDashboardIDLabelsLabelIDDelete()
    {
    }

    /**
     * Test case for dashboardsDashboardIDLabelsPost
     *
     * add a label to a dashboard.
     *
     */
    public function testDashboardsDashboardIDLabelsPost()
    {
    }

    /**
     * Test case for dashboardsDashboardIDLogsGet
     *
     * Retrieve operation logs for a dashboard.
     *
     */
    public function testDashboardsDashboardIDLogsGet()
    {
    }

    /**
     * Test case for dashboardsDashboardIDMembersGet
     *
     * List all dashboard members.
     *
     */
    public function testDashboardsDashboardIDMembersGet()
    {
    }

    /**
     * Test case for dashboardsDashboardIDMembersPost
     *
     * Add dashboard member.
     *
     */
    public function testDashboardsDashboardIDMembersPost()
    {
    }

    /**
     * Test case for dashboardsDashboardIDMembersUserIDDelete
     *
     * removes a member from an dashboard.
     *
     */
    public function testDashboardsDashboardIDMembersUserIDDelete()
    {
    }

    /**
     * Test case for dashboardsDashboardIDOwnersGet
     *
     * List all dashboard owners.
     *
     */
    public function testDashboardsDashboardIDOwnersGet()
    {
    }

    /**
     * Test case for dashboardsDashboardIDOwnersPost
     *
     * Add dashboard owner.
     *
     */
    public function testDashboardsDashboardIDOwnersPost()
    {
    }

    /**
     * Test case for dashboardsDashboardIDOwnersUserIDDelete
     *
     * removes an owner from a dashboard.
     *
     */
    public function testDashboardsDashboardIDOwnersUserIDDelete()
    {
    }

    /**
     * Test case for dashboardsDashboardIDPatch
     *
     * Update a single dashboard.
     *
     */
    public function testDashboardsDashboardIDPatch()
    {
    }

    /**
     * Test case for dashboardsGet
     *
     * Get all dashboards.
     *
     */
    public function testDashboardsGet()
    {
    }

    /**
     * Test case for dashboardsPost
     *
     * Create a dashboard.
     *
     */
    public function testDashboardsPost()
    {
    }
}
