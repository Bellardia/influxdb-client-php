<?php
/**
 * TasksApiTest
 * PHP version 5
 *
 * @category Class
 * @package  InfluxDB2Generated
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Influx API Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace InfluxDB2Generated;

use \InfluxDB2Generated\Configuration;
use \InfluxDB2Generated\ApiException;
use \InfluxDB2Generated\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * TasksApiTest Class Doc Comment
 *
 * @category Class
 * @package  InfluxDB2Generated
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class TasksApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for tasksGet
     *
     * List tasks..
     *
     */
    public function testTasksGet()
    {
    }

    /**
     * Test case for tasksPost
     *
     * Create a new task.
     *
     */
    public function testTasksPost()
    {
    }

    /**
     * Test case for tasksTaskIDDelete
     *
     * Delete a task.
     *
     */
    public function testTasksTaskIDDelete()
    {
    }

    /**
     * Test case for tasksTaskIDGet
     *
     * Retrieve an task.
     *
     */
    public function testTasksTaskIDGet()
    {
    }

    /**
     * Test case for tasksTaskIDLabelsGet
     *
     * list all labels for a task.
     *
     */
    public function testTasksTaskIDLabelsGet()
    {
    }

    /**
     * Test case for tasksTaskIDLabelsLabelIDDelete
     *
     * delete a label from a task.
     *
     */
    public function testTasksTaskIDLabelsLabelIDDelete()
    {
    }

    /**
     * Test case for tasksTaskIDLabelsPost
     *
     * add a label to a task.
     *
     */
    public function testTasksTaskIDLabelsPost()
    {
    }

    /**
     * Test case for tasksTaskIDLogsGet
     *
     * Retrieve all logs for a task.
     *
     */
    public function testTasksTaskIDLogsGet()
    {
    }

    /**
     * Test case for tasksTaskIDMembersGet
     *
     * List all task members.
     *
     */
    public function testTasksTaskIDMembersGet()
    {
    }

    /**
     * Test case for tasksTaskIDMembersPost
     *
     * Add task member.
     *
     */
    public function testTasksTaskIDMembersPost()
    {
    }

    /**
     * Test case for tasksTaskIDMembersUserIDDelete
     *
     * removes a member from an task.
     *
     */
    public function testTasksTaskIDMembersUserIDDelete()
    {
    }

    /**
     * Test case for tasksTaskIDOwnersGet
     *
     * List all task owners.
     *
     */
    public function testTasksTaskIDOwnersGet()
    {
    }

    /**
     * Test case for tasksTaskIDOwnersPost
     *
     * Add task owner.
     *
     */
    public function testTasksTaskIDOwnersPost()
    {
    }

    /**
     * Test case for tasksTaskIDOwnersUserIDDelete
     *
     * removes an owner from an task.
     *
     */
    public function testTasksTaskIDOwnersUserIDDelete()
    {
    }

    /**
     * Test case for tasksTaskIDPatch
     *
     * Update a task.
     *
     */
    public function testTasksTaskIDPatch()
    {
    }

    /**
     * Test case for tasksTaskIDRunsGet
     *
     * Retrieve list of run records for a task.
     *
     */
    public function testTasksTaskIDRunsGet()
    {
    }

    /**
     * Test case for tasksTaskIDRunsPost
     *
     * manually start a run of the task now overriding the current schedule..
     *
     */
    public function testTasksTaskIDRunsPost()
    {
    }

    /**
     * Test case for tasksTaskIDRunsRunIDGet
     *
     * Retrieve a single run record for a task.
     *
     */
    public function testTasksTaskIDRunsRunIDGet()
    {
    }

    /**
     * Test case for tasksTaskIDRunsRunIDLogsGet
     *
     * Retrieve all logs for a run.
     *
     */
    public function testTasksTaskIDRunsRunIDLogsGet()
    {
    }

    /**
     * Test case for tasksTaskIDRunsRunIDRetryPost
     *
     * Retry a task run.
     *
     */
    public function testTasksTaskIDRunsRunIDRetryPost()
    {
    }
}
